name: Rerecord Issue
author: Replay.io
description: Rerecords an issue with updated sources and comments with the results
inputs:
  api-key:
    description: "Replay.io API Key"
  server-url:
    description: "Server with new sources to use while rerecording"
  public:
    description: "Makes the rerecorded replay viewable by everyone"
    default: false

runs:
  using: composite
  steps:
    - name: "Rerecord Issue"
      id: "rerecord-issue"
      uses: actions/github-script@v7
      with:
        result-encoding: json
        script: |
          const fs = require("fs");

          let apiKey = '${{ inputs.api-key }}';
          if (!apiKey) {
            apiKey = process.env.REPLAY_API_KEY || process.env.RECORD_REPLAY_API_KEY || null;
          }
          if (!apiKey) {
            throw new Error("You must provide an API key for rerecording. This can be added as an environment variable named REPLAY_API_KEY or as an `api-key` input.");
          }

          const gap = process.env.GITHUB_ACTION_PATH;

          const getIssueRecording = require(gap + '/dist/issueRecording.js');
          const { issueNumber, recordingId } = await getIssueRecording({
            github,
            eventPath: process.env.GITHUB_EVENT_PATH,
            repositoryName: process.env.GITHUB_REPOSITORY,
          });

          const rerecordIssue = require(gap + '/dist/rerecord.js');
          const data = await rerecordIssue({
            apiKey,
            serverURL: ${{ inputs.server-url }},
            public: ${{ inputs.public }},
            recordingId,
          });

          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number,
            body: data,
          });
      env:
        REPLAY_API_KEY: ${{ inputs.api-key }}
